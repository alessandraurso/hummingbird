{
  "name": "grunt-mocha",
  "description": "Grunt task for running client-side Mocha specs in PhantomJS",
  "version": "0.4.1",
  "homepage": "https://github.com/kmiyashiro/grunt-mocha",
  "author": {
    "name": "Kelly Miyashiro",
    "email": "miyashiro.kelly@gmail.com",
    "url": "http://non-diligent.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/kmiyashiro/grunt-mocha.git"
  },
  "bugs": {
    "url": "https://github.com/kmiyashiro/grunt-mocha/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/kmiyashiro/grunt-mocha/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": "*"
  },
  "scripts": {
    "test": "./node_modules/.bin/grunt test"
  },
  "dependencies": {
    "grunt-lib-phantomjs": "~0.3",
    "mocha": "~1.14"
  },
  "peerDependencies": {
    "grunt": "~0.4"
  },
  "devDependencies": {
    "grunt": "~0.4",
    "grunt-contrib-connect": "~0.2",
    "grunt-contrib-jshint": "~0.3"
  },
  "keywords": [
    "gruntplugin",
    "mocha",
    "test",
    "phantomjs"
  ],
  "files": [
    "growl",
    "phantomjs",
    "support",
    "tasks"
  ],
  "readme": "Automatically run *client-side* mocha specs via grunt/mocha/PhantomJS\r\n\r\nFor a grunt task for server-side mocha tests, see [grunt-mocha-test](https://github.com/pghalliday/grunt-mocha-test) or [grunt-simple-mocha](https://github.com/yaymukund/grunt-simple-mocha)\r\n\r\n# Grunt Compatibility\r\n\r\n* Grunt 0.4 use grunt-mocha 0.2+\r\n* Grunt 0.3 use grunt-mocha 0.1\r\n\r\n**Grunt 0.4.0 migration details in [HISTORY.md](HISTORY.md#020)**\r\n\r\n# grunt-mocha\r\n\r\n(package/README format heavily borrowed from [grunt-jasmine-task](https://github.com/creynders/grunt-jasmine-task) and builtin QUnit task)\r\n\r\n[Grunt](https://github.com/cowboy/grunt) plugin for running Mocha browser specs in a headless browser (PhantomJS)\r\n\r\n## Getting Started\r\n\r\n### Task config\r\n\r\n```js\r\nmocha: {\r\n  // runs all html files (except test2.html) in the test dir\r\n  // In this example, there's only one, but you can add as many as\r\n  // you want. You can split them up into different groups here\r\n  // ex: admin: [ 'test/admin.html' ]\r\n  all: [ 'test/**/!(test2).html' ],\r\n\r\n  // Runs 'test/test2.html' with specified mocha options.\r\n  // This variant auto-includes 'bridge.js' so you do not have\r\n  // to include it in your HTML spec file. Instead, you must add an\r\n  // environment check before you run `mocha.run` in your HTML.\r\n  test2: {\r\n    // Test files\r\n    src: [ 'example/test/test2.html' ],\r\n    options: {\r\n      // Bail means if a test fails, grunt will abort. False by default.\r\n      bail: true,\r\n\r\n      // Pipe output console.log from your JS to grunt. False by default.\r\n      log: true,\r\n\r\n      // mocha options\r\n      mocha: {\r\n        ignoreLeaks: false,\r\n        grep: 'food'\r\n      },\r\n\r\n      // Select a Mocha reporter\r\n      // http://visionmedia.github.com/mocha/#reporters\r\n      reporter: 'Nyan',\r\n\r\n      // Indicates whether 'mocha.run()' should be executed in\r\n      // 'bridge.js'. If you include `mocha.run()` in your html spec,\r\n      // check if environment is PhantomJS. See example/test/test2.html\r\n      run: true,\r\n\r\n      // Override the timeout of the test (default is 5000)\r\n      timeout: 10000\r\n    }\r\n  },\r\n\r\n  // Runs the same as test2 but with URL's\r\n  test3: {\r\n    // Task options\r\n    options: {\r\n      // mocha options\r\n      mocha: {\r\n        ignoreLeaks: false,\r\n        grep: 'food'\r\n      },\r\n\r\n      // URLs passed through as options\r\n      urls: [ 'http://localhost:' + port + '/example/test/test2.html' ],\r\n\r\n      // Indicates whether 'mocha.run()' should be executed in 'bridge.js'\r\n      run: true\r\n    }\r\n  }\r\n}\r\n```\r\n\r\n### Vanilla JS\r\n\r\n#### Option 1 (recommended)\r\n\r\n- Write mocha task description in grunt config using and specify `run: true` option (see [this tasks Gruntfile.js](Gruntfile.js) for details);\r\n- Check for PhantomJS `userAgent` in a test html file and run tests only in a real browser (see [test2.html](example/test/test2.html) for details).\r\n\r\nIn this case you shouldn't include [bridge.js](phantomjs/bridge.js) (it will be included automatically) and tests will be run from [bridge.js](phantomjs/bridge.js).\r\n\r\n#### Option 2\r\n\r\nAlternatively, include `bridge.js` from `tasks/phantomjs` after you include `mocha.js` and run `mocha.setup` in your HTML file. The helper will override `mocha.setup` if it detects PhantomJS. See [test.html](example/test/test.html).\r\n\r\n### AMD\r\n\r\nMocha **must** be included via script tag in the header. There is no need to load Mocha via AMD. You may load other testing libs via AMD if that gives you a fuzzy feeling.\r\n\r\nExample setup with AMD (advanced): https://gist.github.com/2655876\r\n\r\n### Grunt and this plugin\r\n\r\nFirst, make sure you have grunt installed globally, `npm install grunt-cli -g`.\r\n\r\nInstall this grunt plugin next to your project's [Gruntfile.js](http://gruntjs.com/getting-started) with: `npm install grunt-mocha --save-dev`\r\n\r\nThen add this line to your project's `Gruntfile.js` gruntfile at the bottom:\r\n\r\n```javascript\r\ngrunt.loadNpmTasks('grunt-mocha');\r\n```\r\n\r\nAlso add this to the `grunt.initConfig` object in the same file:\r\n\r\n```javascript\r\nmocha: {\r\n  src: ['specs/index.html']\r\n},\r\n```\r\n\r\nReplace `specs/index.html` with the location of your mocha spec running html file.\r\n\r\nNow you can run the mocha task with `grunt mocha`, but it won't work. That's because you need...\r\n\r\n### PhantomJS\r\n\r\nThis task is for running Mocha tests in a headless browser, PhantomJS, which is installed via [grunt-lib-phantomjs](https://github.com/gruntjs/grunt-lib-phantomjs) as a dependency of this task.\r\n\r\n### Mocha\r\n\r\nUse [Mocha](http://visionmedia.github.com/mocha/)\r\n\r\n### Hacks\r\n\r\nThe PhantomJS -> Grunt superdimensional conduit uses `alert`. If you have disabled or aliased alert in your app, this won't work. I have conveniently set a global `PHANTOMJS` on `window` so you can conditionally override alert in your app.\r\n\r\n## License\r\nCopyright (c) 2013 Kelly Miyashiro\r\nLicensed under the MIT license.\r\n",
  "readmeFilename": "README.md",
  "_id": "grunt-mocha@0.4.1",
  "dist": {
    "shasum": "f652bb9bc6ef6c08a20e76e4428eddc638072cd1"
  },
  "_resolved": "git+https://github.com/TrainingPeaks/grunt-mocha.git#9178c0aff80fa5cf6ff00ba59ed2a5d37f3867da",
  "_from": "grunt-mocha@git+https://github.com/TrainingPeaks/grunt-mocha.git"
}
